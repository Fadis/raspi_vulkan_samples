#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout (binding = 0) uniform sampler2D src_texture;
layout (binding = 1, rgba8) writeonly uniform image2D dest_image;

layout(local_size_x_id = 1, local_size_y_id = 2 ) in;
layout(push_constant) uniform PushConstants {
  mat4 tex_mat;
} push_constants;

void main() {
  const uint x = gl_GlobalInvocationID.x;
  const uint y = gl_GlobalInvocationID.y;
  const uint width = gl_WorkGroupSize.x * gl_NumWorkGroups.x;
  const uint height = gl_WorkGroupSize.y * gl_NumWorkGroups.y;
  const float scaled_x = float(x)/float(width);
  const float scaled_y = float(y)/float(height);
  vec4 texcoord = push_constants.tex_mat * vec4( scaled_x, scaled_y, 0.0, 1.0 );
  vec4 color = texture( src_texture, texcoord.xy );
  imageStore( dest_image, ivec2( gl_GlobalInvocationID.xy ), vec4( mix( vec3( 1 ), color.xyz, color.w ), 1.0 ) );
}

