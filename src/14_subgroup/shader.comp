#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_basic : enable

layout(local_size_x_id = 1, local_size_y_id = 2 ) in;
layout(std430, binding = 0) buffer layout1 {
  uint data[];
};

shared uint shm[256];

void main() {
  const uint x = gl_GlobalInvocationID.x;
  const uint y = gl_GlobalInvocationID.y;
  const uint width = gl_WorkGroupSize.x * gl_NumWorkGroups.x;
  const uint index = x + y * width;
  const uint local_size = gl_WorkGroupSize.x * gl_WorkGroupSize.y;
  const uint local_index = gl_LocalInvocationID.x + gl_LocalInvocationID.y * gl_WorkGroupSize.x;
  shm[ local_index ] = uint( data[ index ] );
  uint offset;
  for( offset = 1; offset != gl_SubgroupSize; offset *= 2 ) {
    subgroupBarrier();
    uint next = shm[ ( local_index + offset ) % local_size ];
    subgroupBarrier();
    shm[ local_index ] += next;
  }
  subgroupBarrier();
  uint value = shm[ local_index / gl_SubgroupSize * gl_SubgroupSize ];
  data[ index ] = value;
}

